name: Visual Regression Tests

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      update_baselines:
        description: 'Update baseline images'
        required: false
        type: boolean
        default: false

jobs:
  visual-tests:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}
      
      - name: Start test server
        run: |
          npm run build
          npm run start &
          npx wait-on http://localhost:3000
      
      - name: Run visual tests
        run: |
          if [ "${{ github.event.inputs.update_baselines }}" == "true" ]; then
            npm run test:visual:${{ matrix.browser }} -- --update-baseline
          else
            npm run test:visual:${{ matrix.browser }}
          fi
        env:
          CI: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: visual-test-results-${{ matrix.browser }}
          path: |
            test-results/
            tests/visual/screenshots/
            tests/visual/diffs/
            visual-test-results.json
      
      - name: Upload baseline images
        if: github.event.inputs.update_baselines == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: updated-baselines-${{ matrix.browser }}
          path: tests/visual/baselines/
  
  generate-report:
    name: Generate Visual Report
    runs-on: ubuntu-latest
    needs: visual-tests
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      
      - name: Merge test results
        run: |
          mkdir -p test-results
          find artifacts -name "visual-test-results.json" -exec cp {} test-results/ \;
          node scripts/merge-visual-results.js
      
      - name: Generate HTML report
        run: npm run test:visual:report
      
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: visual-regression-report
          path: tests/visual/reports/
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'tests/visual/reports/visual-regression-report.json';
            
            if (fs.existsSync(reportPath)) {
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
              const { summary } = report;
              
              const comment = `## 📸 Visual Regression Test Results
              
              | Metric | Value |
              |--------|-------|
              | Total Tests | ${summary.total} |
              | Passed | ${summary.passed} ✅ |
              | Failed | ${summary.failed} ❌ |
              | Pass Rate | ${summary.passRate.toFixed(1)}% |
              | Duration | ${(summary.duration / 1000).toFixed(1)}s |
              
              ${summary.failed > 0 ? '### Failed Tests\nPlease review the visual differences in the artifacts.' : '### All tests passed! 🎉'}
              
              [View Full Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  update-baselines:
    name: Update Baseline Images
    runs-on: ubuntu-latest
    needs: visual-tests
    if: github.event.inputs.update_baselines == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Download updated baselines
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      
      - name: Copy baselines
        run: |
          rm -rf tests/visual/baselines
          mkdir -p tests/visual/baselines
          find artifacts -name "*.png" -path "*/baselines/*" -exec cp {} tests/visual/baselines/ \;
      
      - name: Commit and push baselines
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add tests/visual/baselines
          git commit -m "Update visual regression baselines" || echo "No changes to commit"
          git push