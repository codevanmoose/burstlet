{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(gh repo create:*)",
      "Bash(git push:*)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run type-check:*)",
      "Bash(rm:*)",
      "Bash(npm run lint)",
      "Bash(mv:*)",
      "Bash(npm run build:*)",
      "Bash(chmod:*)",
      "Bash(cd:*)",
      "Bash(vercel list:*)",
      "Bash(ls:*)",
      "Bash(vercel:*)",
      "Bash(supabase projects:*)",
      "Bash(supabase link:*)",
      "Bash(supabase status:*)",
      "Bash(curl:*)",
      "WebFetch(domain:supabase.com)",
      "Bash(doctl apps:*)",
      "Bash(./scripts/add-vercel-env.sh:*)",
      "Bash(touch:*)",
      "Bash(gh auth:*)",
      "Bash(./scripts/create-github-repo.sh:*)",
      "Bash(doctl auth:*)",
      "Bash(./scripts/deploy-backend.sh:*)",
      "Bash(./scripts/backend-env-setup.sh:*)",
      "Bash(supabase db url:*)",
      "Bash(gh repo view:*)",
      "Bash(gh repo edit:*)",
      "Bash(npm init:*)",
      "Bash(railway login:*)",
      "Bash(railway whoami:*)",
      "Bash(command:*)",
      "Bash(npx prisma:*)",
      "Bash(./scripts/final-launch-checklist.sh:*)",
      "Bash(pip3 install:*)",
      "Bash(./scripts/add-env-vars-api.sh:*)",
      "Bash(./reinstall-apidog.sh:*)",
      "Bash(apidog-mcp-server:*)",
      "Bash(claude mcp add:*)",
      "Bash(code:*)",
      "Bash(source:*)",
      "WebFetch(domain:burstlet.vercel.app)",
      "Bash(cp:*)",
      "Bash(find:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(git rm:*)",
      "Bash(cd:*)",
      "Bash(export BACKEND_URL=https://burstlet-api-wyn4p.ondigitalocean.app)",
      "Bash(./scripts/deployment-verification.sh:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(./scripts/verify-env-vars.sh:*)",
      "Bash(./scripts/test-backend-env.sh:*)",
      "Bash(psql:*)",
      "Bash(./scripts/production-monitor.sh:*)",
      "Bash(echo:*)",
      "Bash(./scripts/check-deployment.sh:*)",
      "Bash(./scripts/do-env-setup.sh:*)",
      "Bash(./scripts/check-missing-vars.sh:*)",
      "Bash(./scripts/wait-for-deploy.sh:*)",
      "Bash(./scripts/setup-oauth-automated.sh:*)",
      "Bash(./scripts/test-frontend-backend.sh:*)",
      "Bash(./scripts/check-api-keys.sh:*)"
    ],
    "deny": []
  }
}